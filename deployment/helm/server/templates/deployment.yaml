{{- $fullname := include "server.fullname" . -}}
{{- $configMapName := .Values.configMap.name | default (printf "%s-config" $fullname) -}}
{{- $secretName := "" -}}
{{- if .Values.secret.enabled -}}
{{- $secretName = default (printf "%s-tls" $fullname) .Values.secret.name -}}
{{- end -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullname }}
  labels:
    {{- include "server.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "server.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "server.selectorLabels" . | nindent 8 }}
        {{- if .Values.podLabels }}
        {{- toYaml .Values.podLabels | nindent 8 }}
        {{- end }}
    spec:
      {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml .Values.image.pullSecrets | nindent 8 }}
      {{- end }}
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ default (include "server.fullname" .) .Values.serviceAccount.name }}
      {{- else if .Values.serviceAccount.name }}
      serviceAccountName: {{ .Values.serviceAccount.name }}
      {{- end }}
      {{- if .Values.podSecurityContext }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Values.container.name | default "server" }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.container.port }}
          {{- if or .Values.configMap.enabled (and .Values.secret.enabled $secretName) }}
          volumeMounts:
            {{- if .Values.configMap.enabled }}
            - name: config-volume
              mountPath: {{ .Values.container.configMountPath }}
              subPath: {{ .Values.container.configSubPath }}
              readOnly: true
            {{- end }}
            {{- if and .Values.secret.enabled $secretName }}
            - name: server-certs
              mountPath: {{ .Values.container.certsMountPath }}
              readOnly: true
            {{- end }}
          {{- end }}
          {{- if .Values.securityContext }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          {{- end }}
          {{- if .Values.container.resources }}
          resources:
            {{- toYaml .Values.container.resources | nindent 12 }}
          {{- end }}
      {{- if or .Values.configMap.enabled (and .Values.secret.enabled $secretName) }}
      volumes:
        {{- if .Values.configMap.enabled }}
        - name: config-volume
          configMap:
            name: {{ $configMapName }}
            {{- if .Values.container.configSubPath }}
            items:
              - key: {{ .Values.container.configSubPath }}
                path: {{ .Values.container.configSubPath }}
            {{- end }}
        {{- end }}
        {{- if and .Values.secret.enabled $secretName }}
        - name: server-certs
          secret:
            secretName: {{ $secretName }}
        {{- end }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      {{- end }}
